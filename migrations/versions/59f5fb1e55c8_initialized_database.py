from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '59f5fb1e55c8'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # Step 1: Create tables without foreign key constraints
    op.create_table('users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=50), nullable=False),
        sa.Column('phone_number', sa.String(), nullable=True),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('_password_hash', sa.String(), nullable=False),
        sa.Column('role', sa.String(), nullable=False),
        sa.Column('account_status', sa.String(), nullable=True),
        sa.Column('store_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
    )
    
    op.create_table('stores',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('location', sa.String(), nullable=True),
        sa.Column('admin_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    
    op.create_table('products',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('brand_name', sa.String(), nullable=False),
        sa.Column('product_name', sa.String(), nullable=False),
        sa.Column('availability', sa.Boolean(), nullable=True),
        sa.Column('payment_status', sa.String(), nullable=False),
        sa.Column('received_items', sa.Integer(), nullable=True),
        sa.Column('closing_stock', sa.Integer(), nullable=False),
        sa.Column('spoilt_items', sa.Integer(), nullable=True),
        sa.Column('buying_price', sa.Float(), nullable=False),
        sa.Column('selling_price', sa.Float(), nullable=False),
        sa.Column('store_id', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    
    op.create_table('requests',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('date', sa.DateTime(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('quantity', sa.Integer(), nullable=True),
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('clerk_id', sa.Integer(), nullable=True),
        sa.Column('admin_id', sa.Integer(), nullable=True),
        sa.Column('store_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table('salesReport',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('date', sa.DateTime(), nullable=True),
        sa.Column('product_name', sa.String(), nullable=True),
        sa.Column('product_id', sa.Integer(), nullable=True),
        sa.Column('store_id', sa.Integer(), nullable=True),
        sa.Column('quantity_sold', sa.Integer(), nullable=True),
        sa.Column('quantity_in_hand', sa.Integer(), nullable=True),
        sa.Column('profit', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )

    # Step 2: Add foreign key constraints
    op.create_foreign_key('fk_users_store_id', 'users', 'stores', ['store_id'], ['id'])
    op.create_foreign_key('fk_stores_admin_id', 'stores', 'users', ['admin_id'], ['id'])
    op.create_foreign_key('fk_products_store_id', 'products', 'stores', ['store_id'], ['id'])
    op.create_foreign_key('fk_requests_product_id', 'requests', 'products', ['product_id'], ['id'])
    op.create_foreign_key('fk_requests_clerk_id', 'requests', 'users', ['clerk_id'], ['id'])
    op.create_foreign_key('fk_requests_admin_id', 'requests', 'users', ['admin_id'], ['id'])
    op.create_foreign_key('fk_requests_store_id', 'requests', 'stores', ['store_id'], ['id'])
    op.create_foreign_key('fk_salesReport_product_id', 'salesReport', 'products', ['product_id'], ['id'])
    op.create_foreign_key('fk_salesReport_store_id', 'salesReport', 'stores', ['store_id'], ['id'])

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('salesReport')
    op.drop_table('requests')
    op.drop_table('products')
    op.drop_table('users')
    op.drop_table('stores')
    # ### end Alembic commands ###
